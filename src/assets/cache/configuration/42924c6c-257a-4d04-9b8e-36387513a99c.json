[
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/__FIS_3_NDVI",
        "id": "__FIS_3_NDVI",
        "title": "__FIS_3_NDVI",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nfunction index(x, y) {\n\treturn (x - y) / (x + y);\n}\n\nconst NGDR = index(B03, B04);\nconst bRatio = (B03 - 0.175) / (0.39 - 0.175);\n\nconst isCloud = bRatio > 1 || (bRatio > 0 && NGDR > 0);\nconst ndvi = index(B08, B04);\n//return cloud ? [Number.NaN, 1] : [ndvi, 0];\nreturn isCloud ? [ndvi, 1] : [ndvi, 0];"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2019-10-30T10:04:40.975916Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 100,
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/__FIS_5-MOISTURE-INDEX1",
        "id": "__FIS_5-MOISTURE-INDEX1",
        "title": "__FIS_5-MOISTURE-INDEX1",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nfunction index(x, y) {\n\treturn (x - y) / (x + y);\n}\n\nconst NGDR = index(B03, B04);\nconst bRatio = (B03 - 0.175) / (0.39 - 0.175);\n\nconst isCloud = bRatio > 1 || (bRatio > 0 && NGDR > 0);\nconst value = index(B8A, B11);\n//return cloud ? [Number.NaN, 1] : [ndvi, 0];\nreturn isCloud ? [value, 1] : [value, 0];\n\n"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2019-10-30T10:04:40.994733Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 100,
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/__FIS_7-NDWI",
        "id": "__FIS_7-NDWI",
        "title": "__FIS_7-NDWI",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nfunction index(x, y) {\n\treturn (x - y) / (x + y);\n}\n\nconst NGDR = index(B03, B04);\nconst bRatio = (B03 - 0.175) / (0.39 - 0.175);\n\nconst isCloud = bRatio > 1 || (bRatio > 0 && NGDR > 0);\nconst value = index(B03, B08);\n//return cloud ? [Number.NaN, 1] : [ndvi, 0];\nreturn isCloud ? [value, 1] : [value, 0];\n\n"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2019-10-30T10:04:41.005739Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 100,
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/__FIS_8-NDSI",
        "id": "__FIS_8-NDSI",
        "title": "__FIS_8-NDSI",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nconst NGDR = index(B03, B04);\nconst bRatio = (B03 - 0.175) / (0.39 - 0.175);\n\nconst isCloud = bRatio > 1 || (bRatio > 0 && NGDR > 0);\nlet value = index(B03, B11);\n\nreturn isCloud ? [value, 1] : [value, 0];\n\n//Reference: https://earth.esa.int/web/sentinel/technical-guides/sentinel-2-msi/level-2a/algorithm\n"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2020-04-17T13:16:16.409121Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 100,
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/1_TRUE_COLOR",
        "id": "1_TRUE_COLOR",
        "title": "True color",
        "description": "Based on bands 4,3,2",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nlet minVal = 0.0;\nlet maxVal = 0.4;\n\nlet viz = new HighlightCompressVisualizer(minVal, maxVal);\n\nfunction setup() {\n   return {\n    input: [\"B04\", \"B03\", \"B02\",\"dataMask\"],\n    output: { bands: 4 }\n  };\n}\n\nfunction evaluatePixel(samples) {\n    let val = [samples.B04, samples.B03, samples.B02,samples.dataMask];\n    return viz.processList(val);\n}"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2019-10-30T10:04:40.887399Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "upsampling": "BICUBIC",
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/2_FALSE_COLOR",
        "id": "2_FALSE_COLOR",
        "title": "False color",
        "description": "Based on bands 8,4,3",
        "styles": [
            {
                "name": "RGB",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nlet minVal = 0.0;\nlet maxVal = 0.4;\n\nlet viz = new HighlightCompressVisualizer(minVal, maxVal);\n\nfunction setup() {\n  return {\n    input: [\"B03\", \"B04\", \"B08\",\"dataMask\"],\n    output: { bands: 4 }\n  };\n}\n\n\nfunction evaluatePixel(samples) {\n    let val = [samples.B08, samples.B04, samples.B03,samples.dataMask];\n    return viz.processList(val);\n}"
            }
        ],
        "orderHint": 1,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2019-10-30T10:04:41.013845Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "upsampling": "BICUBIC",
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/2_TONEMAPPED_NATURAL_COLOR",
        "id": "2_TONEMAPPED_NATURAL_COLOR",
        "title": "Highlight Optimized Natural Color",
        "description": "Enhanced natural color visualization",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nfunction setup() {\n   return {\n    input: [\"B04\", \"B03\", \"B02\", \"dataMask\"],\n    output: { bands: 4 }\n  };\n}\n\nfunction evaluatePixel(samples) {\n\tvar R = samples.B04 > 0.19595917942 ? Math.cbrt(0.6 * samples.B04) : 2.5 * samples.B04;\n\tvar G = samples.B03 > 0.19595917942 ? Math.cbrt(0.6 * samples.B03) : 2.5 * samples.B03;\n\tvar B = samples.B02 > 0.19595917942 ? Math.cbrt(0.6 * samples.B02) : 2.5 * samples.B02;\n\treturn [R, G, B, samples.dataMask];\n}"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2021-12-15T10:58:33.466155Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "upsampling": "BICUBIC",
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 50,
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/3_NDVI",
        "id": "3_NDVI",
        "title": "NDVI",
        "description": "Based on combination of bands (B8 - B4)/(B8 + B4)",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nfunction setup() {\n    return {\n        input: [\"B03\",\"B04\", \"B08\", \"dataMask\"],\n        output: [\n            { id: \"default\", bands: 4 },\n\t\t\t{ id: \"index\", bands: 1, sampleType: \"FLOAT32\" },\n            { id: \"eobrowserStats\", bands: 2, sampleType: 'FLOAT32' },\n            { id: \"dataMask\", bands: 1 }\n        ]\n      };\n}\n\nfunction evaluatePixel(samples) {\n    let val = index(samples.B08, samples.B04);\n    let imgVals = null;\n    // The library for tiffs works well only if there is only one channel returned.\n    // So we encode the \"no data\" as NaN here and ignore NaNs on frontend.\n    const indexVal = samples.dataMask === 1 ? val : NaN;\n  \n    if (val<-0.5) imgVals = [0.05,0.05,0.05,samples.dataMask];\n    else if (val<-0.2) imgVals = [0.75,0.75,0.75,samples.dataMask];\n    else if (val<-0.1) imgVals = [0.86,0.86,0.86,samples.dataMask];\n    else if (val<0) imgVals = [0.92,0.92,0.92,samples.dataMask];\n    else if (val<0.025) imgVals = [1,0.98,0.8,samples.dataMask];\n    else if (val<0.05) imgVals = [0.93,0.91,0.71,samples.dataMask];\n    else if (val<0.075) imgVals = [0.87,0.85,0.61,samples.dataMask];\n    else if (val<0.1) imgVals = [0.8,0.78,0.51,samples.dataMask];\n    else if (val<0.125) imgVals = [0.74,0.72,0.42,samples.dataMask];\n    else if (val<0.15) imgVals = [0.69,0.76,0.38,samples.dataMask];\n    else if (val<0.175) imgVals = [0.64,0.8,0.35,samples.dataMask];\n    else if (val<0.2) imgVals = [0.57,0.75,0.32,samples.dataMask];\n    else if (val<0.25) imgVals = [0.5,0.7,0.28,samples.dataMask];\n    else if (val<0.3) imgVals = [0.44,0.64,0.25,samples.dataMask];\n    else if (val<0.35) imgVals = [0.38,0.59,0.21,samples.dataMask];\n    else if (val<0.4) imgVals = [0.31,0.54,0.18,samples.dataMask];\n    else if (val<0.45) imgVals = [0.25,0.49,0.14,samples.dataMask];\n    else if (val<0.5) imgVals = [0.19,0.43,0.11,samples.dataMask];\n    else if (val<0.55) imgVals = [0.13,0.38,0.07,samples.dataMask];\n    else if (val<0.6) imgVals = [0.06,0.33,0.04,samples.dataMask];\n    else imgVals = [0,0.27,0,samples.dataMask];    \n \t\n  \treturn {\n      default: imgVals,\n      index: [indexVal],\n      eobrowserStats:[val,isCloud(samples)?1:0],\n      dataMask: [samples.dataMask]\n    };\n}\n\nfunction isCloud(samples){\n    const NGDR = index(samples.B03, samples.B04);\n    const bRatio = (samples.B03 - 0.175) / (0.39 - 0.175);\n    return bRatio > 1 || (bRatio > 0 && NGDR > 0);\n}",
                "legend": {
                    "type": "continuous",
                    "gradients": [
                        {
                            "color": "rgb(0%,0%,0%)",
                            "position": 0
                        },
                        {
                            "color": "rgb(0%,0%,0%)",
                            "label": "- 1.0",
                            "position": 0.05
                        },
                        {
                            "color": "rgb(75%,75%,75%)",
                            "position": 0.050001
                        },
                        {
                            "color": "rgb(75%,75%,75%)",
                            "position": 0.1
                        },
                        {
                            "color": "rgb(86%,86%,86%)",
                            "position": 0.10001
                        },
                        {
                            "color": "rgb(86%,86%,86%)",
                            "position": 0.15
                        },
                        {
                            "color": "rgb(100%,100%,88%)",
                            "position": 0.150001
                        },
                        {
                            "color": "rgb(100%,100%,88%)",
                            "label": "0.0",
                            "position": 0.2
                        },
                        {
                            "color": "rgb(100%,98%,80%)",
                            "position": 0.20001
                        },
                        {
                            "color": "rgb(100%,98%,80%)",
                            "position": 0.25
                        },
                        {
                            "color": "rgb(93%,91%,71%)",
                            "position": 0.250001
                        },
                        {
                            "color": "rgb(93%,91%,71%)",
                            "position": 0.3
                        },
                        {
                            "color": "rgb(87%,85%,61%)",
                            "position": 0.30001
                        },
                        {
                            "color": "rgb(87%,85%,61%)",
                            "position": 0.35
                        },
                        {
                            "color": "rgb(80%,78%,51%)",
                            "position": 0.350001
                        },
                        {
                            "color": "rgb(80%,78%,51%)",
                            "position": 0.4
                        },
                        {
                            "color": "rgb(74%,72%,42%)",
                            "position": 0.40001
                        },
                        {
                            "color": "rgb(74%,72%,42%)",
                            "position": 0.45
                        },
                        {
                            "color": "rgb(69%,76%,38%)",
                            "position": 0.450001
                        },
                        {
                            "color": "rgb(69%,76%,38%)",
                            "position": 0.5
                        },
                        {
                            "color": "rgb(64%,80%,35%)",
                            "position": 0.50001
                        },
                        {
                            "color": "rgb(64%,80%,35%)",
                            "position": 0.55
                        },
                        {
                            "color": "rgb(57%,75%,32%)",
                            "position": 0.550001
                        },
                        {
                            "color": "rgb(57%,75%,32%)",
                            "label": "0.2",
                            "position": 0.6
                        },
                        {
                            "color": "rgb(50%,70%,28%)",
                            "position": 0.60001
                        },
                        {
                            "color": "rgb(50%,70%,28%)",
                            "position": 0.65
                        },
                        {
                            "color": "rgb(44%,64%,25%)",
                            "position": 0.650001
                        },
                        {
                            "color": "rgb(44%,64%,25%)",
                            "position": 0.7
                        },
                        {
                            "color": "rgb(38%,59%,21%)",
                            "position": 0.70001
                        },
                        {
                            "color": "rgb(38%,59%,21%)",
                            "position": 0.75
                        },
                        {
                            "color": "rgb(31%,54%,18%)",
                            "position": 0.750001
                        },
                        {
                            "color": "rgb(31%,54%,18%)",
                            "position": 0.8
                        },
                        {
                            "color": "rgb(25%,49%,14%)",
                            "position": 0.80001
                        },
                        {
                            "color": "rgb(25%,49%,14%)",
                            "position": 0.85
                        },
                        {
                            "color": "rgb(19%,43%,11%)",
                            "position": 0.850001
                        },
                        {
                            "color": "rgb(19%,43%,11%)",
                            "position": 0.9
                        },
                        {
                            "color": "rgb(13%,38%,7%)",
                            "position": 0.90001
                        },
                        {
                            "color": "rgb(13%,38%,7%)",
                            "position": 0.95
                        },
                        {
                            "color": "rgb(6%,33%,4%)",
                            "position": 0.950001
                        },
                        {
                            "color": "rgb(6%,33%,4%)",
                            "position": 0.990001
                        },
                        {
                            "color": "rgb(0%,27%,0%)",
                            "label": "0.6",
                            "position": 1
                        },
                        {
                            "color": "rgb(0%,27%,0%)",
                            "position": 1.05
                        }
                    ],
                    "maxPosition": 1.05,
                    "minPosition": 0
                }
            }
        ],
        "orderHint": 4,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2019-10-30T10:04:41.072640Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "upsampling": "BICUBIC",
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/4-FALSE-COLOR-URBAN",
        "id": "4-FALSE-COLOR-URBAN",
        "title": "False color (urban)",
        "description": "Based on bands 12,11,4",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3 (auto-converted from 1)\n\nlet minVal = 0.0;\nlet maxVal = 0.4;\n\nlet viz = new DefaultVisualizer(minVal, maxVal);\n\nfunction evaluatePixel(samples) {\n    let val = [samples.B12, samples.B11, samples.B04, samples.dataMask];\n    return viz.processList(val);\n}\n\nfunction setup() {\n  return {\n    input: [{\n      bands: [ \"B04\", \"B11\", \"B12\", \"dataMask\" ]\n    }],\n    output: { bands: 4 }  }\n}\n"
            }
        ],
        "orderHint": 3,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2023-07-27T09:25:48.918660Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "upsampling": "BICUBIC",
            "downsampling": "BICUBIC",
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/5-MOISTURE-INDEX1",
        "id": "5-MOISTURE-INDEX1",
        "title": "Moisture index",
        "description": "Based on combination of bands (B8A - B11)/(B8A + B11)",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nconst moistureRamps = [\n        [-0.8, 0x800000],\n        [-0.24, 0xff0000],\n        [-0.032, 0xffff00],\n        [0.032, 0x00ffff],\n        [0.24, 0x0000ff],\n        [0.8, 0x000080]\n      ];\n\nconst viz = new ColorRampVisualizer(moistureRamps);\n\nfunction setup() {\n  return {\n    input: [\"B03\", \"B04\", \"B8A\", \"B11\", \"dataMask\"],\n    output: [\n      { id: \"default\", bands: 4 },\n      { id: \"index\", bands: 1, sampleType: \"FLOAT32\" },\n      { id: \"eobrowserStats\", bands: 2, sampleType: 'FLOAT32' },\n      { id: \"dataMask\", bands: 1 }\n    ]\n  };\n}\n\nfunction evaluatePixel(samples) {\n  let val = index(samples.B8A, samples.B11);\n  // The library for tiffs works well only if there is only one channel returned.\n  // So we encode the \"no data\" as NaN here and ignore NaNs on frontend.\n  const indexVal = samples.dataMask === 1 ? val : NaN;\n  return {\n    default: [...viz.process(val),samples.dataMask],\n    index: [indexVal],\n    eobrowserStats:[val,isCloud(samples)?1:0],\n    dataMask: [samples.dataMask]\n  };\n}\n\nfunction isCloud(samples){\n    const NGDR = index(samples.B03, samples.B04);\n    const bRatio = (samples.B03 - 0.175) / (0.39 - 0.175);\n    return bRatio > 1 || (bRatio > 0 && NGDR > 0);\n}",
                "legend": {
                    "type": "continuous",
                    "gradients": [
                        {
                            "color": "rgb(50%,0%,0%)",
                            "label": "< -0.8",
                            "position": -0.8
                        },
                        {
                            "color": "rgb(100%,0%,0%)",
                            "label": "-0.24",
                            "position": -0.64
                        },
                        {
                            "color": "rgb(100%,100%,0%)",
                            "label": "-0.032",
                            "position": -0.32
                        },
                        {
                            "label": "0",
                            "position": 0
                        },
                        {
                            "color": "rgb(0%,100%,100%)",
                            "label": "0.032",
                            "position": 0.32
                        },
                        {
                            "color": "rgb(0%,0%,100%)",
                            "label": "0.24",
                            "position": 0.64
                        },
                        {
                            "color": "rgb(0%,0%,50%)",
                            "label": "> 0.8",
                            "position": 0.8
                        }
                    ],
                    "maxPosition": 0.8,
                    "minPosition": -0.8
                }
            }
        ],
        "orderHint": 5,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2020-04-30T07:51:58.360352Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/6-SWIR",
        "id": "6-SWIR",
        "title": "SWIR",
        "description": "Based on bands 12,8A,4",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\nlet minVal = 0.0;\nlet maxVal = 0.4;\n\nlet viz = new HighlightCompressVisualizer(minVal, maxVal);\n\nfunction setup() {\n  return {\n    input: [\"B12\", \"B8A\", \"B04\", \"dataMask\"],\n    output: { bands: 4 }\n  };\n}\n\nfunction evaluatePixel(samples) {\n    let val = [samples.B12, samples.B8A, samples.B04,samples.dataMask];\n    return viz.processList(val);\n}"
            }
        ],
        "orderHint": 6,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2020-04-30T07:52:45.056718Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "upsampling": "BICUBIC",
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/7-NDWI",
        "id": "7-NDWI",
        "title": "NDWI",
        "description": "Based on combination of bands (B3 - B8)/(B3 + B8)",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n//ndwi\nconst colorRamp1 = [\n    [0, 0xFFFFFF],\n    [1, 0x008000]\n];\nconst colorRamp2 = [\n    [0, 0xFFFFFF],\n    [1, 0x0000CC]\n];\n\nlet viz1 = new ColorRampVisualizer(colorRamp1);\nlet viz2 = new ColorRampVisualizer(colorRamp2);\n\nfunction setup() {\nreturn {\n  input: [\"B03\",\"B04\",\"B08\", \"dataMask\"],\n  output: [\n    { id: \"default\", bands: 4 },\n    { id: \"index\", bands: 1, sampleType: \"FLOAT32\" },\n    { id: \"eobrowserStats\", bands: 2, sampleType: 'FLOAT32' },\n    { id: \"dataMask\", bands: 1 }\n  ]\n};\n}\n\nfunction evaluatePixel(samples) {\nlet val = index(samples.B03, samples.B08);\nlet imgVals = null;\n// The library for tiffs works well only if there is only one channel returned.\n// So we encode the \"no data\" as NaN here and ignore NaNs on frontend.\nconst indexVal = samples.dataMask === 1 ? val : NaN;\n\nif (val < -0) {\n  imgVals = [...viz1.process(-val),samples.dataMask];\n} else {\n  imgVals = [...viz2.process(Math.sqrt(Math.sqrt(val))),samples.dataMask];\n}\n\nreturn {\n  default: imgVals,\n  index: [indexVal],\n  eobrowserStats:[val,isCloud(samples)?1:0],\n  dataMask: [samples.dataMask]\n\n};\n}\n\nfunction isCloud(samples){\n    const NGDR = index(samples.B03, samples.B04);\n    const bRatio = (samples.B03 - 0.175) / (0.39 - 0.175);\n    return bRatio > 1 || (bRatio > 0 && NGDR > 0);\n}"
            }
        ],
        "orderHint": 7,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2020-04-30T07:53:31.160731Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE/layers/8-NDSI",
        "id": "8-NDSI",
        "title": "NDSI",
        "description": "Based on combination of bands (B3 - B11)/(B3 + B11); values above 0.42 are regarded as snowy",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n//Reference: https://earth.esa.int/web/sentinel/technical-guides/sentinel-2-msi/level-2a/algorithm\n\nlet viz = new Identity();\n\nfunction setup() {\n  return {\n    input: [\"B03\", \"B11\",\"B04\",\"B02\",\"dataMask\"],\n     output: [\n       { id: \"default\", bands: 4 },\n       { id: \"index\", bands: 1, sampleType: \"FLOAT32\" },\n       { id: \"eobrowserStats\", bands: 2, sampleType: 'FLOAT32' },\n       { id: \"dataMask\", bands: 1 }\n     ]\n  };\n}\n\nfunction evaluatePixel(samples) {\n    let val = index(samples.B03, samples.B11);\n    let imgVals = null;\n    // The library for tiffs works well only if there is only one channel returned.\n    // So we encode the \"no data\" as NaN here and ignore NaNs on frontend.\n    const indexVal = samples.dataMask === 1 ? val : NaN;\n  \n    if (val>0.42) \n      imgVals = [0,0.8,1,samples.dataMask];\n    else \n      imgVals = [2.5*samples.B04, 2.5*samples.B03,2.5*samples.B02,samples.dataMask];\n\t\n  \treturn {\n      default: imgVals,\n      index: [indexVal],\n      eobrowserStats:[val,isCloud(samples)?1:0],\n      dataMask: [samples.dataMask]\n    };\n}\n\nfunction isCloud(samples){\n    const NGDR = index(samples.B03, samples.B04);\n    const bRatio = (samples.B03 - 0.175) / (0.39 - 0.175);\n    return bRatio > 1 || (bRatio > 0 && NGDR > 0);\n}",
                "legend": {
                    "type": "discrete",
                    "items": [
                        {
                            "color": "rgb(0%, 50%, 100%)",
                            "label": "Snow"
                        }
                    ]
                }
            }
        ],
        "orderHint": 15,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/42924c-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2020-04-30T07:53:50.538647Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "mosaickingOrder": "mostRecent",
            "temporal": false,
            "maxCloudCoverage": 20,
            "previewMode": "EXTENDED_PREVIEW",
            "type": "S2L1C"
        }
    }
]