[
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE/layers/1_TOPOGRAPHIC",
        "id": "1_TOPOGRAPHIC",
        "title": "Topographic",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// defaultVis to false and choose your max and\n// min values. The color map will then be scaled\n// to those max and min values\nconst defaultVis = true\nconst max = 9000\nconst min = -9000\n\nfunction setup() {\n    return {\n        input: [\"DEM\", \"dataMask\"],\n        output: [\n            { id: \"default\", bands: 4, sampleTYPE: 'AUTO' },\n            { id: \"index\", bands: 1, sampleType: 'FLOAT32' },\n            { id: \"dataMask\", bands: 1 }\n        ]\n    };\n}\n\nfunction updateMap(max, min) {\n    const numIntervals = map.length\n    const intervalLength = (max - min) / (numIntervals - 1);\n    for (let i = 0; i < numIntervals; i++) {\n        map[i][0] = max - intervalLength * i\n    }\n}\n\nconst map = [\n    [8000, 0xffffff],\n    [7000, 0xf2f2f2],\n    [6000, 0xe5e5e5],\n    [5500, 0x493811],\n    [5000, 0x5e4c26],\n    [4500, 0x726038],\n    [4000, 0x87724c],\n    [3500, 0x998760],\n    [3000, 0xad9b75],\n    [2500, 0xc1af89],\n    [2000, 0xd6c49e],\n    [1500, 0xead8af],\n    [1000, 0xfcedbf],\n    [900, 0xaadda0],\n    [800, 0xa5d69b],\n    [700, 0x96ce8e],\n    [600, 0x84c17a],\n    [500, 0x7aba70],\n    [400, 0x72b266],\n    [300, 0x5ea354],\n    [200, 0x4c933f],\n    [100, 0x3d873d],\n    [75, 0x357c3a],\n    [50, 0x2d722d],\n    [25, 0x266821],\n    [10, 0x1e5e14],\n    [0.01, 0x165407]\n];\n\nif (!defaultVis) updateMap(max, min);\n// add ocean color\nmap.push([-10000, 0x0f0f8c])\nconst visualizer = new ColorMapVisualizer(map);\n\nfunction evaluatePixel(sample) {\n    let val = sample.DEM;\n    let imgVals = visualizer.process(val)\n\n    // Return the 4 inputs and define content for each one\n    return {\n        default: [...imgVals, sample.dataMask],\n        index: [val],\n        dataMask: [sample.dataMask]\n    };\n}"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2023-12-15T10:15:11.761702Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM/sources/4"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "demInstance": "COPERNICUS_90",
            "EGM": false,
            "type": "DEM"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE/layers/COLOR",
        "id": "COLOR",
        "title": "Color",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// defaultVis to false and choose your max and\n// min values. The color map will then be scaled\n// to those max and min values\nconst defaultVis = true\nconst max = 9000\nconst min = -9000\n\nfunction setup() {\n    return {\n        input: [\"DEM\", \"dataMask\"],\n        output: [\n            { id: \"default\", bands: 4, sampleTYPE: 'AUTO' },\n            { id: \"index\", bands: 1, sampleType: 'FLOAT32' },\n            { id: \"dataMask\", bands: 1 }\n        ]\n    };\n}\n\nfunction updateMap(max, min) {\n    const numIntervals = map.length\n    const intervalLength = (max - min) / (numIntervals - 1);\n    for (let i = 0; i < numIntervals; i++) {\n        map[i][0] = max - intervalLength * i\n    }\n}\n\nconst map = [\n    [9000, 0xffffff],\n    [7000, 0xdcefff],\n    [5000, 0xbdc7f9],\n    [3000, 0x9faaef],\n    [1000, 0x788bb4],\n    [500, 0x8b6d00],\n    [400, 0xd292b4],\n    [300, 0x78385a],\n    [200, 0xaa5f00],\n    [50, 0x8b4b28],\n    [30, 0x782d28],\n    [10, 0x63383b],\n    [0, 0xc7c7c7],\n    [-10, 0x9f9fff],\n    [-20, 0x7878eb],\n    [-50, 0x5a54f9],\n    [-200, 0x3b50f5],\n    [-500, 0x3b3be6],\n    [-1000, 0x2831b4],\n    [-6000, 0x1e1e78],\n    [-9000, 0x1e005a],\n    [-12000, 0x000028],\n];\n\nif (!defaultVis) updateMap(max, min);\nconst visualizer = new ColorRampVisualizer(map);\n\nfunction evaluatePixel(sample) {\n    let val = sample.DEM;\n    let imgVals = visualizer.process(val)\n\n    // Return the 4 inputs and define content for each one\n    return {\n        default: [...imgVals, sample.dataMask],\n        index: [val],\n        dataMask: [sample.dataMask]\n    };\n}"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2023-12-15T10:15:45.456457Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM/sources/4"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "demInstance": "COPERNICUS_90",
            "EGM": false,
            "type": "DEM"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE/layers/GRAYSCALE",
        "id": "GRAYSCALE",
        "title": " Grayscale",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// defaultVis to false and choose your max and\n// min values. The color map will then be scaled\n// to those max and min values\nconst defaultVis = true\nconst max = 9000\nconst min = -9000\n\nfunction setup() {\n    return {\n        input: [\"DEM\", \"dataMask\"],\n        output: [\n            { id: \"default\", bands: 4, sampleTYPE: 'AUTO' },\n            { id: \"index\", bands: 1, sampleType: 'FLOAT32' },\n            { id: \"dataMask\", bands: 1 }\n        ]\n    };\n}\n\nfunction updateMap(max, min) {\n    const numIntervals = map.length\n    const intervalLength = (max - min) / (numIntervals - 1);\n    for (let i = 0; i < numIntervals; i++) {\n        map[i][0] = max - intervalLength * i\n    }\n}\n\nconst map = [\n    [9000, 0xffffff],\n    [7000, 0xf9f9f9],\n    [5000, 0xf5f5f5],\n    [3000, 0xebebeb],\n    [1000, 0xe0e0e0],\n    [500, 0xd6d6d6],\n    [400, 0xc7c7c7],\n    [300, 0xb4b4b4],\n    [200, 0x9f9f9f],\n    [50, 0x8b8b8b],\n    [30, 0x828282],\n    [10, 0x6d6d6d],\n    [0, 0x636363],\n    [-10, 0x5a5a5a],\n    [-20, 0x545454],\n    [-50, 0x505050],\n    [-200, 0x4a4a4a],\n    [-500, 0x464646],\n    [-1000, 0x3d3d3d],\n    [-5000, 0x373737],\n    [-9000, 0x181818],\n    [-12000, 0x000000],\n];\n\nif (!defaultVis) updateMap(max, min);\nconst visualizer = new ColorRampVisualizer(map);\n\nfunction evaluatePixel(sample) {\n    let val = sample.DEM;\n    let imgVals = visualizer.process(val)\n\n    // Return the 4 inputs and define content for each one\n    return {\n        default: [...imgVals, sample.dataMask],\n        index: [val],\n        dataMask: [sample.dataMask]\n    };\n}"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2023-12-15T10:15:56.303195Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM/sources/4"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "demInstance": "COPERNICUS_90",
            "EGM": false,
            "type": "DEM"
        }
    },
    {
        "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE/layers/SEPIA",
        "id": "SEPIA",
        "title": "Sepia",
        "description": "",
        "styles": [
            {
                "name": "default",
                "description": "Default layer style",
                "evalScript": "//VERSION=3\n// To set custom max and min values, set\n// defaultVis to false and choose your max and\n// min values. The color map will then be scaled\n// to those max and min values\nconst defaultVis = true\nconst max = 9000\nconst min = -9000\n\nfunction setup() {\n    return {\n        input: [\"DEM\", \"dataMask\"],\n        output: [\n            { id: \"default\", bands: 4, sampleTYPE: 'AUTO' },\n            { id: \"index\", bands: 1, sampleType: 'FLOAT32' },\n            { id: \"dataMask\", bands: 1 }\n        ]\n    };\n}\n\nfunction updateMap(max, min) {\n    const numIntervals = map.length\n    const intervalLength = (max - min) / (numIntervals - 1);\n    for (let i = 0; i < numIntervals; i++) {\n        map[i][0] = max - intervalLength * i\n    }\n}\n\nconst map = [\n    [9000, 0xff952c],\n    [7000, 0xf9922c],\n    [5000, 0xf5902b],\n    [3000, 0xeb8929],\n    [1000, 0xe08428],\n    [500, 0xd67d25],\n    [400, 0xc77522],\n    [300, 0xb46a1f],\n    [200, 0x9f5e1c],\n    [50, 0x8b5218],\n    [30, 0x824b16],\n    [10, 0x6d4013],\n    [0, 0x633911],\n    [-10, 0x5a3510],\n    [-20, 0x502e0e],\n    [-50, 0x3b2209],\n    [-200, 0x2c1a07],\n    [-500, 0x221306],\n    [-1000, 0x180e04],\n    [-5000, 0x0f0702],\n    [-9000, 0x050200],\n    [-12000, 0x000000],\n];\n\nif (!defaultVis) updateMap(max, min);\nconst visualizer = new ColorRampVisualizer(map);\n\nfunction evaluatePixel(sample) {\n    let val = sample.DEM;\n    let imgVals = visualizer.process(val)\n\n    // Return the 4 inputs and define content for each one\n    return {\n        default: [...imgVals, sample.dataMask],\n        index: [val],\n        dataMask: [sample.dataMask]\n    };\n}"
            }
        ],
        "orderHint": 0,
        "instance": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/wms/instances/bdf8d9-YOUR-INSTANCEID-HERE"
        },
        "lastUpdated": "2023-12-15T10:15:30.241920Z",
        "dataset": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM"
        },
        "datasetSource": {
            "@id": "https://services.sentinel-hub.com/configuration/v1/datasets/DEM/sources/4"
        },
        "defaultStyleName": "default",
        "datasourceDefaults": {
            "clampNegative": false,
            "demInstance": "COPERNICUS_90",
            "EGM": false,
            "type": "DEM"
        }
    }
]